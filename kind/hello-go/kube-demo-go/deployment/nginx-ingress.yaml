---
apiVersion: v1
data:
  large-client-header-buffers: 4 16k
  client-header-buffer-size: 16k
  http2-max-field-size: 16k
kind: ConfigMap
metadata:
  namespace: kube-system
  name: nginx-ingress-controller
---
#CORS CONFIG SNIPPET
kind: ConfigMap
apiVersion: v1
metadata:
  name: "custom-config"
  namespace: kube-system
data:
  cors.conf: |
    set $cors "";

    if ($http_origin ~* '^(http|https)?://(localhost(:[0-9]+)?|[0-9a-z]+.webjet.com.au|[0-9a-z]+.zuji.com.au|[0-9a-z]+.webjet.co.nz)$') {
      set $cors "true";
    }

    if ($the_real_ip = '125.7.50.82'){
      set $cors "true";
    }

    if ($request_method = 'OPTIONS') { 
          set $cors "${cors}options";
    }

    if ($cors = "trueoptions") {
          add_header 'Access-Control-Allow-Origin' "*";       
          add_header 'Access-Control-Allow-Methods' 'GET, POST, HEAD, PUT, DELETE, OPTIONS';
          add_header 'Access-Control-Allow-Headers' 'X-Correlation-Id,Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With';        

          # Tell client that this pre-flight info is valid for 20 days
          add_header 'Access-Control-Max-Age' 1728000;
          add_header 'Content-Type' 'text/plain charset=UTF-8';
          add_header 'Content-Length' 0;
          
          return 204;
    }

    if ($request_method ~* "(GET|POST|HEAD)") {
          add_header "Access-Control-Allow-Origin"  "*";
          add_header 'Access-Control-Allow-Headers' 'X-Correlation-Id,Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With';        
    }
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: robots-text
  namespace: kube-system
data:
  robots.txt: |
    User-agent: *
    Disallow: /

    User-agent: Mediapartners-Google
    Disallow: /
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  labels:
    k8s-app: nginx-ingress-controller
  namespace: kube-system
spec:
  replicas: 2
  template:
    metadata:
      labels:
        k8s-app: nginx-ingress-controller
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - image: gcr.io/google_containers/nginx-ingress-controller:0.9.0-beta.14
      #- image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.11.0
        name: nginx-ingress-controller
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 1
        ports:
        - containerPort: 80
          hostPort: 80
        - containerPort: 443
          hostPort: 443
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumeMounts:
        - name: config-volume
          mountPath: /etc/nginx/custom-snippets/
        - name: robots-text
          mountPath: /home/www/html/ 
        args:
          - /nginx-ingress-controller
          - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
          - --publish-service=$(POD_NAMESPACE)/nginx-ingress-lb 
          - --configmap=$(POD_NAMESPACE)/nginx-ingress-controller 
      volumes:
      - name: config-volume
        configMap:
          name: custom-config
      - name: robots-text
        configMap:
          name: robots-text
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress-lb
  labels:
    app: nginx-ingress-lb
  namespace: kube-system
  annotations:
    service.beta.kubernetes.io/external-traffic: OnlyLocal
spec:
  type: LoadBalancer
  #externalTrafficPolicy: Cluster
  ports:
  - port: 80
    name: http
    targetPort: 80
  - port: 443
    name: https
    targetPort: 443
  selector:
    # Selects nginx-ingress-controller pods
    k8s-app: nginx-ingress-controller

########################################################################
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: default-http-backend
  labels:
    k8s-app: default-http-backend
  namespace: kube-system
spec:
  replicas: 2
  template:
    metadata:
      labels:
        k8s-app: default-http-backend
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: default-http-backend
        # Any image is permissable as long as:
        # 1. It serves a 404 page at /
        # 2. It serves 200 on a /healthz endpoint
        image: gcr.io/google_containers/defaultbackend:1.4
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 20Mi
---
apiVersion: v1
kind: Service
metadata:
  name: default-http-backend
  namespace: kube-system
  labels:
    k8s-app: default-http-backend
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    k8s-app: default-http-backend
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: robots-text
  namespace: kube-system
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/configuration-snippet: |
      location /robots.txt { alias /home/www/html/robots.txt; }
spec:
  rules:
  - host: devservices.webjet.com.au
    http:
      paths:
      - backend:
          serviceName: http-svc
          servicePort: 80
        path: /
  - host: devservices.webjet.co.nz
    http:
      paths:
      - backend:
          serviceName: http-svc
          servicePort: 80
        path: /
  - host: devservices.zuji.com.au
    http:
      paths:
      - backend:
          serviceName: http-svc
          servicePort: 80
        path: /
  - host: services.webjet.com.au
    http:
      paths:
      - backend:
          serviceName: http-svc
          servicePort: 80
        path: /
  - host: services.webjet.co.nz
    http:
      paths:
      - backend:
          serviceName: http-svc
          servicePort: 80
        path: /
  - host: services.zuji.com.au
    http:
      paths:
      - backend:
          serviceName: http-svc
          servicePort: 80
        path: /
